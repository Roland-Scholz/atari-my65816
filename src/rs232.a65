	.IF PLATFORM <= 1
		.A8
		.I8
	.ENDIF

RS232V:
		.word ROPEN-1		;OPEN
		.word ROPEN-1		;CLOSE
		.word RGET-1		;GET
		.word RPUT-1		;PUT
		.word RSTATUS-1		;STATUS
		.word RSPECIAL-1	;SPECIAL
		RTS
	
SERINIT:
	.IF PLATFORM = 0
		lda #$83
		sta LCR0
		
		lda #0
		sta DLM0
		lda #1
		sta DLL0
		
		lda #$03
		sta LCR0
		rts
	.ENDIF
		
	.IF PLATFORM = 1
		LDA #$4A		;RX+TX AUS
		STA SB+COMMA		;RESET ERROR
		STA SB+COMMB
	
		LDA #$30		;RESET TRANS
		STA SB+COMMA
		STA SB+COMMB
	
		LDA #$20		;RESET RECV
		STA SB+COMMA
		STA SB+COMMB
	
		LDA #$10		;RESET MODE
		STA SB+COMMA
		STA SB+COMMB
	
		LDA #$E0
		STA SB+AUXCTRL
	
		LDA #0			;load timer with
		STA SB+CNTMSB		;	
		LDA #2			;57600 BAUD
		STA SB+CNTLSB

		LDA SB+COMMA		;Switch to test baudrates
	
		LDA #$66		;115200 BAUD
		STA SB+CLOCKA
;		LDA #$66		;
		STA SB+CLOCKB

		
		LDA #$93		;RTS handshake + 8bits no parity
		STA SB+MODEA		
;		LDA #$93		;RTS handshake + 8bits no parity
		STA SB+MODEB
	
		LDA #$17		;CTS handshake + 1 stopbit
		STA SB+MODEA
		STA SB+MODEB
	
		LDA #0
		STA SB+OPCTRL
	
		LDA #%11111111
		STA SB+OPSET
	
		LDA #%11111100
		STA SB+OPRES
		
		LDA #0			;IRQS AUS
		STA SB+IMR
		
		LDA #5			;RX+TX AN
		STA SB+COMMA
		STA SB+COMMB

		RTS
	.ENDIF
	
ISRDEV:		LDX ICHIDZ
		LDA HATABS,X
		CMP #RS232D		;'R'
		BNE ISRDEVNO
		LDA ICDNOZ
		BEQ ISRDEVNO
		CMP #3
		BCC ISRDEVEX
ISRDEVNO:	PLA
		PLA
		CLC
		LDY #NONDEV
ISRDEVEX:	RTS
	

ROPEN:		JSR ISRDEV
ROK:		LDY #SUCCES
		SEC
		RTS


	.IF PLATFORM = 0
RGET:		JSR ISRDEV
;		LDA #1
;		LDX ICDNOZ
;		DEX
;		BNE RGET2
		
RGET1:		LDA LSR0
		AND #1
		BEQ RGET1
		LDA RBR0
		JMP ROK
	
;RGET2:		BIT SB+STATB
;		BEQ RGET2
;		LDA SB+RECB
;		JMP ROK
		
RPUT:		TAY
		JSR ISRDEV
	
;		LDA #64
;		LDX ICDNOZ
;		DEX
;		BNE RPUT2
	
RPUT1:		LDA LSR0
		AND #64
		BEQ RPUT1
		TYA
		STA THR0
RPUT1EX:	JMP ROK
	
;RPUT2:		BIT SB+STATB
;		BEQ RPUT2
;		STY SB+TRANSB
;RPUT2EX:	JMP ROK
	.ENDIF


	.IF PLATFORM = 1
RGET:		JSR ISRDEV
		LDA #1
		LDX ICDNOZ
		DEX
		BNE RGET2
		
RGET1:		BIT SB+STATA
		BEQ RGET1
		LDA SB+RECA
		JMP ROK
	
RGET2:		BIT SB+STATB
		BEQ RGET2
		LDA SB+RECB
		JMP ROK
	
RPUT:		TAY
		JSR ISRDEV
	
		LDA #4
		LDX ICDNOZ
		DEX
		BNE RPUT2
	
RPUT1:		BIT SB+STATA
		BEQ RPUT1
		STY SB+TRANSA
RPUT1EX:	JMP ROK
	
RPUT2:		BIT SB+STATB
		BEQ RPUT2
		STY SB+TRANSB
RPUT2EX:	JMP ROK
		
	.ENDIF
		
		
RSTATUS:	JSR ISRDEV
		LDA #0
		STA DEVSTAT
		STA DEVSTAT+2
		STA DEVSTAT+3
			
	.IF PLATFORM = 0
		LDA LSR0
		AND #1
		STA DEVSTAT+1
		JMP ROK
	.ENDIF
	
	.IF PLATFORM = 1
		LDX ICDNOZ
		DEX
		BNE RSTATUS2
	
		LDA SB+STATA
RSTATUS3:	AND #1
		STA DEVSTAT+1	
		JMP ROK
	
RSTATUS2:	LDA SB+STATB
		JMP RSTATUS3
	.ENDIF
	
	
RSPECIAL:	JSR ISRDEV
		LDA ICCOMZ
		CMP #CXIO36
		BEQ RBAUD
;		CMP #CXIO38
;		BEQ RTRANSL
		JMP ROK
	
;RTRANSL:	LDX ICDNOZ
;		DEX
;		LDA ICAX1Z
;		STA SERCNT0,X
;		JMP ROK
	
	
RBAUD:		LDA ICAX1Z		;BAUD
		AND #%00000111
		TAX
		LDA BAUDTAB,X
		TAX
					;CLOCK
		
	.IF PLATFORM = 0
		LDA #$83
		STA LCR0
		
		LDA #0
		STA DLM0
		TXA
		STA DLL0
		
		LDA #$03
		STA LCR0
		
		JMP ROK		
		
BAUDTAB:	.word 24		;4800
		.byte 12		;9600
		.byte 6			;19200
		.byte 3			;38400
		.byte 2			;57600
		.byte 1			;115200
		.byte 1			;
		.byte 1			;
	.ENDIF
	
	.IF PLATFORM = 1
		PHA
		LDA ICAX1Z
		LSR
		LSR
		LSR
		LSR
		AND #7
		EOR #%10010111
		TAY
	
		LDA #16+7
		LDX ICAX1Z
		BPL RBAUD1
		ORA #8
RBAUD1:		LDX ICDNOZ
		DEX
		BNE RBAUD2
	
		LDX #$4A		;RX+TX AUS
		STX SB+COMMA
		LDX #$10		;RES MODE
		STX SB+COMMA
	
		STY SB+MODEA
		STA SB+MODEA
		PLA
		STA SB+CLOCKA
	
		LDA #5
		STA SB+COMMA
		JMP ROK
	
RBAUD2:		LDX #$4A		;RX+TX AUS
		STX SB+COMMB
		LDX #$10
		STX SB+COMMB
	
		STY SB+MODEB
		STA SB+MODEB
		PLA
		STA SB+CLOCKB
	
		LDX #5			;RX+TX AUS
		STX SB+COMMB
	
		JMP ROK
		
BAUDTAB:	.word $00		;4800
		.byte $BB		;9600
		.byte $33		;19200
		.byte $CC		;38400
		.byte $88		;57600
		.byte $66		;115200
		.byte $66		;
		.byte $66		;
	.ENDIF
	
